{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "demodf2023"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"ls_1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_1'"
		},
		"ls_adls_1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_1'"
		},
		"ls_api_to_blob_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_api_to_blob'"
		},
		"ls_csv_pizza_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_csv_pizza'"
		},
		"ls_csv_superstore_data_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_csv_superstore_data'"
		},
		"ls_poc_cl_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_poc_cl'"
		},
		"ls_poc_superstore_adls_json_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_poc_superstore_adls_json'"
		},
		"ls_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_sink'"
		},
		"ls_sink_1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sink_1'"
		},
		"ls_sourcefolder_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_sourcefolder'"
		},
		"ls_sql_data_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_data'"
		},
		"ls_sql_pizza_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_pizza'"
		},
		"ls_1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_adls_1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_api_file_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/srummelil/tst-data-store/blob/master/ftest.py"
		},
		"ls_api_to_blob_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net"
		},
		"ls_csv_pizza_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_csv_superstore_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_poc_cl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_poc_superstore_adls_json_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_rest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dummy.restapiexample.com/api/v1/employees"
		},
		"ls_rest_1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dummy.restapiexample.com/api/v1/employees"
		},
		"ls_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		},
		"ls_sourcefolder_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://demosta2023.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/api to blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureTableSink",
								"azureTableInsertType": "replace",
								"azureTableRowKeyName": "ID",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ID"
										}
									},
									{
										"source": {
											"path": "[['employee_name']"
										},
										"sink": {
											"name": "Emp_Name"
										}
									},
									{
										"source": {
											"path": "[['employee_salary']"
										},
										"sink": {
											"name": "Salary"
										}
									},
									{
										"source": {
											"path": "[['employee_age']"
										},
										"sink": {
											"name": "Age"
										}
									},
									{
										"source": {
											"path": "[['profile_image']"
										},
										"sink": {
											"name": "Profile"
										}
									}
								],
								"collectionReference": "$['data']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "ds_rest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rest')]",
				"[concat(variables('factoryId'), '/datasets/AzureTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copying missing files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get filename from source",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sourcefolder",
								"type": "DatasetReference",
								"parameters": {
									"filename": "@item()"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Get filename from sink folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_sink",
								"type": "DatasetReference",
								"parameters": {
									"filename": "@item()"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Filter filenames",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get filename from sink folder",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get filename from source",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get filename from source').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(contains(activity('Get filename from sink folder').output.childItems,item() ))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_sourcefolder",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sourcefolder')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"JsonSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-01-25T07:31:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/poc pl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Pizzaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Pizzaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PizzaTid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PizzaTid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "P_Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "P_Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "P_Category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "P_Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Ingredients",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Ingredients",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "P_Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "P_Size",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "P_Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "P_Price",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Orderid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Orderid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Order_detid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Order_detid",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "P_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "P_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "T_Time",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "T_Time",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_csv_pizza",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_pizza",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_csv_pizza')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_pizza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "Employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_pizza')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_csv_pizza",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "part-00000-tid-3559077593015423063-7f31acf5-2e74-44fa-a7c4-194eaad2a4b4-74-1-c000.csv",
						"folderPath": "Cleansed/Pizza.csv",
						"fileSystem": "poc1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Pizzaid",
						"type": "String"
					},
					{
						"name": "PizzaTid",
						"type": "String"
					},
					{
						"name": "P_Name",
						"type": "String"
					},
					{
						"name": "P_Category",
						"type": "String"
					},
					{
						"name": "Ingredients",
						"type": "String"
					},
					{
						"name": "P_Size",
						"type": "String"
					},
					{
						"name": "P_Price",
						"type": "String"
					},
					{
						"name": "Orderid",
						"type": "String"
					},
					{
						"name": "Order_detid",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "P_date",
						"type": "String"
					},
					{
						"name": "T_Time",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_csv_pizza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'MM'),'/',formatDateTime(utcNow(),'dd'))",
							"type": "Expression"
						},
						"fileSystem": "rawdata"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"messageId": {
							"type": "integer"
						},
						"deviceId": {
							"type": "string"
						},
						"temperature": {
							"type": "number"
						},
						"humidity": {
							"type": "number"
						},
						"EventProcessedUtcTime": {
							"type": "string"
						},
						"PartitionId": {
							"type": "integer"
						},
						"EventEnqueuedUtcTime": {
							"type": "string"
						},
						"IoTHub": {
							"type": "object",
							"properties": {
								"MessageId": {
									"type": "null"
								},
								"CorrelationId": {
									"type": "null"
								},
								"ConnectionDeviceId": {
									"type": "string"
								},
								"ConnectionDeviceGenerationId": {
									"type": "string"
								},
								"EnqueuedTime": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_rest_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_rest_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "abc"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "Sink",
						"fileSystem": "practicecon"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sourcefolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sourcefolder",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "Source",
						"fileSystem": "practicecon"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sourcefolder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "messageId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deviceid",
						"type": "varchar"
					},
					{
						"name": "temprature",
						"type": "float",
						"precision": 15
					},
					{
						"name": "humidity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EventProcessedUtcTime",
						"type": "varchar"
					},
					{
						"name": "PartitionId",
						"type": "varchar"
					},
					{
						"name": "EventEnqueuedUtcTime",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "iotdata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_pizza')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_pizza",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Pizzaid",
						"type": "varchar"
					},
					{
						"name": "PizzaTid",
						"type": "varchar"
					},
					{
						"name": "P_Name",
						"type": "varchar"
					},
					{
						"name": "P_Category",
						"type": "varchar"
					},
					{
						"name": "Ingredients",
						"type": "varchar"
					},
					{
						"name": "P_Size",
						"type": "varchar"
					},
					{
						"name": "P_Price",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Orderid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Order_detid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "P_date",
						"type": "date"
					},
					{
						"name": "T_Time",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "pizza"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_pizza')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_api_file')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_api_file_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_api_to_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_api_to_blob_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_api_to_blob_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_csv_pizza')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_csv_pizza_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_csv_pizza_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_csv_superstore_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_csv_superstore_data_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_csv_superstore_data_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_poc_cl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_poc_cl_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_poc_cl_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_poc_superstore_adls_json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_poc_superstore_adls_json_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_poc_superstore_adls_json_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sink_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_sink_1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sourcefolder')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_sourcefolder_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_sourcefolder_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_data_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_pizza')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_pizza_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_json_adls",
								"type": "DatasetReference"
							},
							"name": "JsonSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_data",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          messageId as integer,",
						"          deviceId as string,",
						"          temperature as double,",
						"          humidity as double,",
						"          EventProcessedUtcTime as string,",
						"          PartitionId as integer,",
						"          EventEnqueuedUtcTime as string,",
						"          IoTHub as (MessageId as string, CorrelationId as string, ConnectionDeviceId as string, ConnectionDeviceGenerationId as string, EnqueuedTime as string)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> JsonSource",
						"select1 derive(humidity = round(humidity,3),",
						"          temperature = round(temperature,3),",
						"          EventProcessedUtcTime = left(EventProcessedUtcTime,16),",
						"          EventEnqueuedUtcTime = left(EventEnqueuedUtcTime,16)) ~> derivedColumn1",
						"JsonSource select(mapColumn(",
						"          messageId,",
						"          deviceId,",
						"          temperature,",
						"          humidity,",
						"          EventProcessedUtcTime,",
						"          PartitionId,",
						"          EventEnqueuedUtcTime",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          messageId as integer,",
						"          deviceid as string,",
						"          temprature as double,",
						"          humidity as double,",
						"          EventProcessedUtcTime as string,",
						"          PartitionId as string,",
						"          EventEnqueuedUtcTime as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          messageId,",
						"          deviceid = deviceId,",
						"          temprature = temperature,",
						"          humidity,",
						"          EventProcessedUtcTime,",
						"          PartitionId,",
						"          EventEnqueuedUtcTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_json_adls')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_data')]"
			]
		}
	]
}